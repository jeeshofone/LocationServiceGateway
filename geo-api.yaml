AWSTemplateFormatVersion: "2010-09-09"
Description: "API Gateway and Location Services integration with direct API Key reference"

Parameters:
  ApiKeyValue:
    Type: String
    Description: The API key value for Location Service.
  DomainName:
    Type: String
    Description: The domain name for the Geo API Gateway.
  HostedZoneId:
    Type: String
    Description: The Route 53 hosted zone ID for the domain name.
  CORSOrigin:
    Type: String
    Description: The domain-name origin for the CORS policy.

Mappings:
  RegionMap:
    us-east-1:
      LocationServiceEndpoint: maps.geo.us-east-1.amazonaws.com
    us-east-2:
      LocationServiceEndpoint: maps.geo.us-east-2.amazonaws.com
    us-west-2:
      LocationServiceEndpoint: maps.geo.us-west-2.amazonaws.com
    ap-south-1:
      LocationServiceEndpoint: maps.geo.ap-south-1.amazonaws.com
    ap-southeast-1:
      LocationServiceEndpoint: maps.geo.ap-southeast-1.amazonaws.com
    ap-southeast-2:
      LocationServiceEndpoint: maps.geo.ap-southeast-2.amazonaws.com
    ap-northeast-1:
      LocationServiceEndpoint: maps.geo.ap-northeast-1.amazonaws.com
    ca-central-1:
      LocationServiceEndpoint: maps.geo.ca-central-1.amazonaws.com
    eu-central-1:
      LocationServiceEndpoint: maps.geo.eu-central-1.amazonaws.com
    eu-west-1:
      LocationServiceEndpoint: maps.geo.eu-west-1.amazonaws.com
    eu-west-2:
      LocationServiceEndpoint: maps.geo.eu-west-2.amazonaws.com
    eu-north-1:
      LocationServiceEndpoint: maps.geo.eu-north-1.amazonaws.com
    sa-east-1:
      LocationServiceEndpoint: maps.geo.sa-east-1.amazonaws.com

Resources:
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Ref DomainName
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      ValidationMethod: DNS

  RestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "GeoApiGateway"
      Description: "API Geo Proxy Service for specific region"
      FailOnWarnings: True
      EndpointConfiguration:
        Types:
          - REGIONAL

  Deployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
      - MethodProxyGet
    Properties:
      RestApiId: !Ref RestApi
      Description: "API Deployment"
      # No StageName property when associated through Stage resource

  Stage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      StageName: "Prod"
      Description: "Production Stage"
      RestApiId: !Ref RestApi
      DeploymentId: !Ref Deployment

  ApiGatewayDomainName:
    Type: "AWS::ApiGateway::DomainName"
    Properties:
      DomainName: !Ref DomainName
      EndpointConfiguration:
        Types:
          - REGIONAL
      RegionalCertificateArn: !Ref Certificate

  BasePathMapping:
    Type: "AWS::ApiGateway::BasePathMapping"
    Properties:
      DomainName: !Ref ApiGatewayDomainName
      RestApiId: !Ref RestApi
      Stage: !Ref Stage

  ResourceProxy:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref RestApi
      ParentId: 
        Fn::GetAtt: 
          - "RestApi"
          - "RootResourceId"
      PathPart: "{proxy+}"

  MethodProxyGet:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: "GET"
      AuthorizationType: "NONE"
      RestApiId: !Ref RestApi
      ResourceId: !Ref ResourceProxy
      Integration:
        Type: "HTTP_PROXY"
        IntegrationHttpMethod: "GET"
        Uri: !Sub 
          - "https://${ApiEndpoint}/{proxy}?key=${ApiKey}"
          - ApiEndpoint: !FindInMap [RegionMap, !Ref "AWS::Region", LocationServiceEndpoint]
            ApiKey: !Ref ApiKeyValue
        RequestParameters:
          integration.request.path.proxy: "method.request.path.proxy"
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
      RequestParameters:
        method.request.path.proxy: true





Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${DomainName}/Prod"
