AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: "API Gateway and Location Services integration with direct API Key reference"

Parameters:
  ApiKeyValue:
    Type: String
    Description: The API key value for Location Service.
  DomainName:
    Type: String
    Description: The domain name for the Geo API Gateway.
  HostedZoneId:
    Type: String
    Description: The Route 53 hosted zone ID for the domain name.
  CORSOrigin:
    Type: String
    Description: The domain-name origin for the CORS policy.

Mappings:
  RegionMap:
    us-east-1:
      LocationServiceEndpoint: maps.geo.us-east-1.amazonaws.com
    us-east-2:
      LocationServiceEndpoint: maps.geo.us-east-2.amazonaws.com
    us-west-2:
      LocationServiceEndpoint: maps.geo.us-west-2.amazonaws.com
    ap-south-1:
      LocationServiceEndpoint: maps.geo.ap-south-1.amazonaws.com
    ap-southeast-1:
      LocationServiceEndpoint: maps.geo.ap-southeast-1.amazonaws.com
    ap-southeast-2:
      LocationServiceEndpoint: maps.geo.ap-southeast-2.amazonaws.com
    ap-northeast-1:
      LocationServiceEndpoint: maps.geo.ap-northeast-1.amazonaws.com
    ca-central-1:
      LocationServiceEndpoint: maps.geo.ca-central-1.amazonaws.com
    eu-central-1:
      LocationServiceEndpoint: maps.geo.eu-central-1.amazonaws.com
    eu-west-1:
      LocationServiceEndpoint: maps.geo.eu-west-1.amazonaws.com
    eu-west-2:
      LocationServiceEndpoint: maps.geo.eu-west-2.amazonaws.com
    eu-north-1:
      LocationServiceEndpoint: maps.geo.eu-north-1.amazonaws.com
    sa-east-1:
      LocationServiceEndpoint: maps.geo.sa-east-1.amazonaws.com

Resources:
  Certificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      DomainName: !Ref DomainName
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      ValidationMethod: "DNS"

  GeoApiGateway:
    Type: "AWS::Serverless::Api"
    Properties:
      Description: "API Geo Proxy Service for specific region"
      StageName: "Prod"
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'GET'"
        AllowHeaders: "'Content-Type,X-Forwarded-For'"
        AllowOrigin: !Sub "https://${CORSOrigin}"
        MaxAge: "'600'"
        AllowCredentials: true
      Domain:
        DomainName: !Ref DomainName
        CertificateArn: !Ref Certificate
      DefinitionBody:
        swagger: '2.0'
        info:
          title: !Ref "AWS::StackName"
        paths:
          '/{proxy+}':
            get:  # Specifically defining a GET method
              responses:
                "200":
                  description: "200 response"
              x-amazon-apigateway-integration:
                httpMethod: 'GET'
                type: 'http_proxy'
                uri:
                  Fn::Sub:
                    - 'https://${LocationServiceEndpoint}/{proxy}?key=${ApiKey}'
                    - LocationServiceEndpoint:
                        Fn::FindInMap:
                          [
                            RegionMap,
                            !Ref "AWS::Region",
                            LocationServiceEndpoint,
                          ]
                      ApiKey: !Ref ApiKeyValue
                requestParameters:
                  integration.request.path.proxy: 'method.request.path.proxy'
                passthroughBehavior: "when_no_match"
                responses:
                  default:
                    statusCode: "200"
